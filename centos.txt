yum update -y
yum upgrade -y


setenforce 0
sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/sysconfig/selinux

modprobe br_netfilter
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables

swapoff -a

nano /etc/fstab

yum install -y yum-utils device-mapper-persistent-data lvm2 wget nano 


yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum install -y docker-ce

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF


yum install -y kubelet kubeadm kubectl

sudo reboot

systemctl start docker && systemctl enable docker
systemctl start kubelet && systemctl enable kubelet

docker info | grep -i cgroup

sed -i 's/cgroup-driver=systemd/cgroup-driver=cgroupfs/g' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf

systemctl daemon-reload
systemctl restart kubelet



 kubeadm init --apiserver-advertise-address=0.0.0.0  --apiserver-cert-extra-sans=0.0.0.0 --pod-network-cidr=10.244.0.0/16  --ignore-preflight-errors=NumCPU


 kubeadm init --apiserver-advertise-address=0.0.0.0 --pod-network-cidr=10.244.0.0/16  --ignore-preflight-errors=NumCPU



mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config



kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

kubectl get nodes
kubectl get pods --all-namespaces

kubectl create deployment nginx --image=nginx
kubectl describe deployment nginx

kubectl create service nodeport nginx --tcp=80:80

kubectl get pods 
kubectl get svc


kubectl get pods -o wide



kubectl scale deployment nginx --replicas=8

kubectl scale deployment nginx --replicas=3

kubectl set image deployment/nginx-server nginx=nginx:1.13.8-alpine

kubectl rollout status deployment/nginx-server



kubectl describe pod <pod-name>
kubectl set image deployment/nginx-server nginx=nginx:1.18.
kubectl get pods -o wide
kubectl describe pod nginx-server-7ddd985dd6-mpn9h
kubectl rollout history deployment/nginx-server
kubectl rollout undo deployment/nginx-server
kubectl rollout undo deployment/nginx-server --to-revision=1


kubectl expose rc example --port=80 --target-port=80 \
        --name=nginx --type=LoadBalancer













===========================================================================


https://www.linode.com/docs/kubernetes/manage-a-docker-cluster-with-kubernetes/

https://www.howtoforge.com/tutorial/centos-kubernetes-docker-cluster/
